---
name: Terraform Plan

description: Terraform Plan

inputs:
  env_name:
    description: 環境名（dev, stg, prod）
    required: true
  github-token:
    description: サードパーティの Action を実行するための権限を付与するための認証用トークン
    required: true
  working-directory:
    description: Terraform CLI 実行時のパス
    required: true

runs:
  using: composite
  steps:
    - uses: actions/setup-python@v5
      if: env.NEED_LAMBDA_PACKAGE == 'true'
      with:
        python-version: "3.12"

    - name: Setup Terraform
      uses: ./.github/actions/setup-terraform
      with:
        working-directory: ${{ inputs.working-directory }}

    - name: Terraform Validate
      uses: ./.github/actions/terraform-validate
      with:
        github-token: ${{ inputs.github-token }}
        working-directory: ${{ inputs.working-directory }}

    - name: Setup tfcmt
      uses: ./.github/actions/setup-tfcmt

    - name: Terraform Plan
      continue-on-error: true
      id: terraform-plan
      run: terraform plan -detailed-exitcode -no-color > tf_plan.txt
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: tfcmt
      if: steps.terraform-plan.outputs.exitcode != '1'
      run: |
        case "$TF_PLAN_EXIT_CODE" in
          0) TF_PLAN_STATUS="no-changes" ;;
          1) TF_PLAN_STATUS="error" ;;
          2) TF_PLAN_STATUS="has-diff" ;;
          *) TF_PLAN_STATUS="unknown-error" ;;
        esac

        TARGET=$(echo ${{ inputs.working-directory }} | sed -e 's|^.*terraform/environments/||' | cut -c 1-36)
        tfcmt --var target:$TARGET plan --patch --skip-no-changes -- cat tf_plan.txt

        echo "TF_PLAN_STATUS=$TF_PLAN_STATUS"
        echo "TF_PLAN_STATUS=$TF_PLAN_STATUS" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        TF_PLAN_EXIT_CODE: ${{ steps.terraform-plan.outputs.exitcode }}
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Terraform Plan (failure) -> Status
      if: steps.terraform-plan.outputs.exitcode == '1'
      run: exit 1
      shell: bash
